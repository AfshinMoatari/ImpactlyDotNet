#!/bin/bash
protected_branch='master'
current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')
RED='\033[0;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color


print() {
    echo -e "$2$1${NC}"
}


# only run this if you are pushing to master
#if [[ $current_branch = $protected_branch ]] ; then
    print "Running pre push check..." $YELLOW
    print "Trying to build project..." $YELLOW
    
    #Let's speed things up a little bit
    DOTNET_CLI_TELEMETRY_OPTOUT=1
    DOTNET_SKIP_FIRST_TIME_EXPERIENCE=1
    
    # build the project
    dotnet build /warnaserror -v m

    # $? is a shell variable which stores the return code from what we just ran
    rc=$?
    if [[ $rc != 0 ]] ; then
        print "Failed to build the project, please fix this and push again" $RED
        print ""
        exit $rc
    fi

    # navigate to the test project to run the tests
    # TODO: change this to your test project directory
#    cd test

#    print "Running unit tests..." $YELLOW
#    print ""

    # run the unit tests
#    dotnet test

    # $? is a shell variable which stores the return code from what we just ran
#    rc=$?
#    if [[ $rc != 0 ]] ; then
        # A non-zero return code means an error occurred, so tell the user and exit
#        print "Unit tests failed, please fix and push again" $RED
#        print ""
#        exit $rc
#    fi

    # Everything went OK so we can exit with a zero
    print "Pre push check passed!" $GREEN
    print ""
#fi

exit 0